apply plugin: "jacoco"

jacoco {
    toolVersion "0.8.0"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoDebugTestCoverage(type: JacocoReport, dependsOn: ["testDebugUnitTest", "createDebugCoverageReport"]) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports for the debug build."

    classDirectories = fileTree(
            dir: "${project.buildDir}/intermediates/classes/debug",
            excludes: [
                    '**/R.class',
                    '**/R$*.class',
                    '**/*$ViewInjector*.*',
                    '**/*$ViewBinder*.*',
                    '**/BuildConfig.*',
                    '**/Manifest*.*',
                    '**/*$Lambda$*.*',
                    '**/*$inlined$*.*',
                    '**/*Module.*',
                    '**/*Dagger*.*',
                    '**/*MembersInjector*.*',
                    '**/*_Provide*Factory*.*'
            ]
    )

    def coverageSourceDirs = ["src/main/java", "src/debug/java",]

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)

    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])

    reports {
        xml.enabled = true
        html.enabled = true
    }
}

connectedCheck.dependsOn "jacocoDebugTestCoverage"