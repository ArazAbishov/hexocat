apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "com.apollographql.apollo"

apply from: rootProject.file("plugins/android-paperwork.gradle")
apply from: rootProject.file("plugins/android-jacoco.gradle")

def versions = rootProject.ext.versions
def libraries = rootProject.ext.libraries

def versionMajor = 0
def versionMinor = 0
def versionPatch = 0
def versionBuild = 1

buildscript {
    Properties properties = new Properties()

    def localProperties = rootProject.file("local.properties")
    if (localProperties.exists()) {
        properties.load(localProperties.newDataInputStream())
    }

    ext.githubPat = properties.getProperty("githubPat")
    if (!githubPat?.trim()) {
        ext.githubPat = System.getenv("GITHUB_PAT")
    }

    if (!githubPat?.trim()) {
        throw new InvalidUserDataException("Neither 'githubPat' property " +
                "in the 'local.properties' file or 'GITHUB_PAT' environment variable was set.")
    }
}

android {
    compileSdkVersion versions.sdk
    buildToolsVersion versions.tools

    defaultConfig {
        minSdkVersion versions.minsdk
        targetSdkVersion versions.sdk

        applicationId "com.abishov.hexocat"
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        archivesBaseName = "app-${versionName}-${versionCode}"

        testInstrumentationRunner "com.abishov.hexocat.HexocatTestRunner"

        buildConfigField "String", "GITHUB_PAT", "\"${project.githubPat}\""
    }

    buildFeatures {
        compose true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
        useIR = true
    }

    composeOptions {
        kotlinCompilerVersion "1.4.21"
        kotlinCompilerExtensionVersion libraries.compose
    }

    lintOptions {
        abortOnError true
        disable "GoogleAppIndexingWarning"
        warning "InvalidPackage"
    }

    packagingOptions {
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
        exclude "META-INF/LICENSE"
        exclude "META-INF/rxjava.properties"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
            applicationIdSuffix = ".debug"
            signingConfig = signingConfigs.debug
        }
    }

    testOptions {
        execution "ANDROIDX_TEST_ORCHESTRATOR"
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
        }
    }
}

apollo {
    generateKotlinModels = true
}

dependencies {
    implementation "com.apollographql.apollo:apollo-runtime:$libraries.apollo"
    implementation "com.apollographql.apollo:apollo-rx2-support:$libraries.apollo"

    implementation "androidx.core:core-ktx:$libraries.ktx"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.ext.kotlin"
    implementation "hu.supercluster:paperwork:${libraries.paperwork}"

    // Support libraries
    implementation "com.google.android.material:material:1.2.1"
    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation "androidx.annotation:annotation:1.1.0"
    implementation "androidx.recyclerview:recyclerview:1.1.0"

    implementation "androidx.compose.ui:ui:$libraries.compose"

    // Tooling support (Previews, etc.)
    implementation "androidx.compose.ui:ui-tooling:$libraries.compose"

    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:$libraries.compose"
    implementation "androidx.compose.material:material-icons-extended:$libraries.compose"

    // Material Design
    implementation "androidx.compose.material:material:$libraries.compose"

    implementation "dev.chrisbanes.accompanist:accompanist-coil:0.5.0"

    // ReactiveX
    implementation "io.reactivex.rxjava2:rxandroid:${libraries.rxandroid}"
    implementation "io.reactivex.rxjava2:rxjava:${libraries.rxjava}"

    // Google
    kapt "com.google.dagger:dagger-compiler:${libraries.dagger}"
    implementation "com.google.dagger:dagger:${libraries.dagger}"

    kapt "com.google.dagger:dagger-android-processor:${libraries.dagger}"
    implementation "com.google.dagger:dagger-android-support:${libraries.dagger}"

    // Square libraries
    implementation "com.squareup.okhttp3:okhttp:${libraries.okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${libraries.okhttp}"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${libraries.leakcanary}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${libraries.leakcanary}"

    // Jake Wharton libraries
    implementation "com.jakewharton.rxbinding2:rxbinding:${libraries.rxbindings}"
    implementation "com.jakewharton.rxbinding2:rxbinding-support-v4:${libraries.rxbindings}"
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:${libraries.rxbindings}"
    implementation "com.jakewharton.timber:timber:${libraries.timber}"
    implementation "com.jakewharton.threetenabp:threetenabp:${libraries.threetenabp}"

    // Unit test dependencies
    testImplementation "junit:junit:${libraries.junit}"
    testImplementation "org.assertj:assertj-core:${libraries.assertj}"
    testImplementation "org.mockito:mockito-core:${libraries.mockito}"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${libraries.leakcanary}"

    testImplementation "com.willowtreeapps.assertk:assertk:${libraries.assertk}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${libraries.mockitok}"

    // Android test dependencies
    androidTestUtil "androidx.test:orchestrator:1.3.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test:rules:1.3.0"

    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:3.3.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
    androidTestImplementation "androidx.test.espresso:espresso-intents:3.3.0"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.3.0"
    androidTestImplementation "androidx.ui:ui-test:1.0.0-alpha07"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:${libraries.compose}"

    androidTestImplementation "com.github.andrzejchm.RESTMock:android:${libraries.restmock}"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:${libraries.okhttp}"
    androidTestImplementation "org.mockito:mockito-android:${libraries.mockito}"
    androidTestImplementation "com.squareup.rx.idler:rx2-idler:${libraries.rxidler}"
    androidTestImplementation "com.jakewharton.espresso:okhttp3-idling-resource:${libraries.okhttpIdlingResource}"
}
